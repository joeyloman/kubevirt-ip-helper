/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// IPPoolStatusApplyConfiguration represents an declarative configuration of the IPPoolStatus type for use
// with apply.
type IPPoolStatusApplyConfiguration struct {
	LastUpdate            *v1.Time                      `json:"lastupdate,omitempty"`
	LastUpdateBeforeStart *v1.Time                      `json:"lastupdatebeforestart,omitempty"`
	IPv4                  *IPv4StatusApplyConfiguration `json:"ipv4,omitempty"`
}

// IPPoolStatusApplyConfiguration constructs an declarative configuration of the IPPoolStatus type for use with
// apply.
func IPPoolStatus() *IPPoolStatusApplyConfiguration {
	return &IPPoolStatusApplyConfiguration{}
}

// WithLastUpdate sets the LastUpdate field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastUpdate field is set to the value of the last call.
func (b *IPPoolStatusApplyConfiguration) WithLastUpdate(value v1.Time) *IPPoolStatusApplyConfiguration {
	b.LastUpdate = &value
	return b
}

// WithLastUpdateBeforeStart sets the LastUpdateBeforeStart field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the LastUpdateBeforeStart field is set to the value of the last call.
func (b *IPPoolStatusApplyConfiguration) WithLastUpdateBeforeStart(value v1.Time) *IPPoolStatusApplyConfiguration {
	b.LastUpdateBeforeStart = &value
	return b
}

// WithIPv4 sets the IPv4 field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPv4 field is set to the value of the last call.
func (b *IPPoolStatusApplyConfiguration) WithIPv4(value *IPv4StatusApplyConfiguration) *IPPoolStatusApplyConfiguration {
	b.IPv4 = value
	return b
}
